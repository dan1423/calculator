{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","expression","setExpression","answer","setAnswer","display","symbol","prev","length","test","calculate","eval","allClear","clear","split","slice","join","className","type","value","placeholder","disabled","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"m3BAIMA,IAAI,SAAJA,MACJ,cAAmCC,oDAAS,IAA5C,2NAAOC,WAAP,cAAkBC,cAAlB,cACA,WAA0BF,oDAAS,GAAnC,4NAAMG,OAAN,cAAaC,UAAb,cAEMC,QAAS,SAACC,GACZJ,eAAc,SAAAK,GAAI,OAAEA,EAAKD,KACY,KAAlCL,WAAWA,WAAWO,OAAO,KAC3B,SAASC,KAAKH,GACbJ,cAAcI,GAGhBJ,cAAcC,OAAOG,KAKvBI,UAAW,SAAXA,YACJN,UAAUO,KAAKV,aACfC,eAAc,SAACK,GAAD,OAAQA,EAAK,QAGvBK,SAAU,WACdV,cAAc,IACdE,UAAU,IAENS,MAAO,WACXX,eAAc,SAAAK,GAAI,OAAEA,EAAKO,MAAM,IAAIC,MAAM,EAAER,EAAKC,OAAO,GAAGQ,KAAK,OAC/DZ,UAAU,IAEZ,OACE,kEAAKa,UAAU,YAAf,SACE,mEAAKA,UAAU,OAAf,UACE,mEAAKA,UAAU,MAAf,UACE,oEAAOC,KAAK,OAAOC,MAAOlB,WAAYmB,YAAY,IAAIC,UAAQ,IAC9D,kEAAKJ,UAAU,QAAf,SAAwBd,YAE1B,kEAAKmB,QAASV,SAAUK,UAAU,yBAAlC,gBACA,kEAAKK,QAAST,MAAOI,UAAU,wBAA/B,eACA,kEAAKK,QAAS,kBAAIjB,QAAQ,MAAMY,UAAU,gBAA1C,eACA,kEAAKK,QAAS,kBAAIjB,QAAQ,MAAMY,UAAU,kBAA1C,eACA,kEAAKK,QAAS,kBAAIjB,QAAQ,MAAMY,UAAU,4BAA1C,eACA,kEAAKK,QAAS,kBAAIjB,QAAQ,MAAMY,UAAU,4BAA1C,eACA,kEAAKK,QAAS,kBAAIjB,QAAQ,MAAMY,UAAU,2BAA1C,eACA,kEAAKK,QAAS,kBAAIjB,QAAQ,MAAMY,UAAU,kBAA1C,eACA,kEAAKK,QAAS,kBAAIjB,QAAQ,MAAMY,UAAU,2BAA1C,eACA,kEAAKK,QAAS,kBAAIjB,QAAQ,MAAMY,UAAU,2BAA1C,eACA,kEAAKK,QAAS,kBAAIjB,QAAQ,MAAMY,UAAU,0BAA1C,eACA,kEAAKK,QAAS,kBAAIjB,QAAQ,MAAMY,UAAU,iBAA1C,eACA,kEAAKK,QAAS,kBAAIjB,QAAQ,MAAMY,UAAU,0BAA1C,eACA,kEAAKK,QAAS,kBAAIjB,QAAQ,MAAMY,UAAU,0BAA1C,eACA,kEAAKK,QAAS,kBAAIjB,QAAQ,MAAMY,UAAU,4BAA1C,eACA,kEAAKK,QAASZ,UAAWO,UAAU,uBAAnC,eACA,kEAAKK,QAAS,kBAAIjB,QAAQ,MAAMY,UAAU,2BAA1C,eACA,kEAAKK,QAAS,kBAAIjB,WAAWY,UAAU,0BAAvC,qBAOOlB,2B,gICpDAwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACnC,EAAA,EAAD,MAEFoC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2a635042.chunk.js","sourcesContent":["import './App.css';\nimport { useState } from 'react';\n\n\nconst App=()=> {\n  const [expression,setExpression] = useState(\"\");\n  const[answer,setAnswer] = useState(0);\n \n  const display =(symbol)=>{\n      setExpression(prev=>prev+symbol);\n      if(expression[expression.length-1]== \"=\"){\n        if(/[0-9.]/.test(symbol)){\n            setExpression(symbol)\n        }\n        else{\n          setExpression(answer+symbol);\n        }\n      }\n  };\n\n  const calculate =()=>{\n    setAnswer(eval(expression));\n    setExpression((prev)=>prev+\"=\");\n  };\n\n  const allClear =()=>{\n    setExpression(\"\");\n    setAnswer(0);\n  };\n  const clear =()=>{\n    setExpression(prev=>prev.split(\"\").slice(0,prev.length-1).join(\"\"));\n    setAnswer(0);\n  };\n  return (\n    <div className=\"container\">\n      <div className=\"grid\">\n        <div className=\"dis\">\n          <input type=\"text\" value={expression} placeholder=\"0\" disabled/>\n          <div className=\"total\">{answer}</div>\n        </div>\n        <div onClick={allClear} className=\"padButton AC light-red\">AC</div>\n        <div onClick={clear} className=\"padButton C light-red\">C</div>\n        <div onClick={()=>display(\"/\")} className=\"padButton div\">/</div>\n        <div onClick={()=>display(\"*\")} className=\"padButton times\">X</div>\n        <div onClick={()=>display(\"7\")} className=\"padButton seven dark-gray\">7</div>\n        <div onClick={()=>display(\"8\")} className=\"padButton eight dark-gray\">8</div>\n        <div onClick={()=>display(\"9\")} className=\"padButton nine dark-gray\">9</div>\n        <div onClick={()=>display(\"-\")} className=\"padButton minus\">-</div>\n        <div onClick={()=>display(\"4\")} className=\"padButton four dark-gray\">4</div>\n        <div onClick={()=>display(\"5\")} className=\"padButton five dark-gray\">5</div>\n        <div onClick={()=>display(\"6\")} className=\"padButton six dark-gray\">6</div>\n        <div onClick={()=>display(\"+\")} className=\"padButton plus\">+</div>\n        <div onClick={()=>display(\"1\")} className=\"padButton one dark-gray\">1</div>\n        <div onClick={()=>display(\"2\")} className=\"padButton two dark-gray\">2</div>\n        <div onClick={()=>display(\"3\")} className=\"padButton three dark-gray\">3</div>\n        <div onClick={calculate} className=\"padButton equal blue\">=</div>\n        <div onClick={()=>display(\"0\")} className=\"padButton zero dark-gray\">0</div>\n        <div onClick={()=>display()} className=\"padButton dot dark-gray\">.</div>\n       \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}